import aiogram as aig
from aiogram import types
from mysql import DataBaseQuery


class Menu:
    def __init__(self, msg_text, kb, kb_buttons, parse_mode=None, photos=None):
        self.msg_text = msg_text
        self.kb = kb
        self.kb_buttons = kb_buttons
        self.parse_mode = parse_mode
        self.photos = photos

    async def send_menu(self, message: types.Message, kb_included=True):

        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é —á–µ—Ä–µ–∑ message
        :param kb_included: True –µ—Å–ª–∏ –Ω–∞–¥–æ –≤—Å—Ç–∞–≤–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        :param message:
        """
        if kb_included:
            self.kb.add(*self.kb_buttons)
            await message.answer(self.msg_text, reply_markup=self.kb, parse_mode=self.parse_mode)
        else:
            await message.answer(self.msg_text, parse_mode=self.parse_mode)

    async def send_rule_menu(self, rules_ides, message: types.Message, callback_data_for_esc):

        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é –ø—Ä–∞–≤–∏–ª (–∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –ø—Ä–∞–≤–∏–ª)
        :param callback_data_for_esc: –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–ª–±—ç–∫–∞
        :param rules_ides: ID –ø—Ä–∞–≤–∏–ª
        :param message: types.Message
        """

        dbq = DataBaseQuery()

        kb = types.InlineKeyboardMarkup(row_width=2)
        buttons = []

        for i in rules_ides:
            buttons.append(types.InlineKeyboardButton(text=dbq.get_rule_name(i), callback_data=str(i)))
        buttons.append(types.InlineKeyboardButton(text='üëà –Ω–∞–∑–∞–¥', callback_data=callback_data_for_esc))

        self.kb = kb
        self.kb_buttons = buttons

        await self.send_menu(message)

    async def send_exercise_menu(self, message: types.Message):

        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞
        """
        self.kb.add(*self.kb_buttons)
        await message.answer(self.msg_text, reply_markup=self.kb)

    async def send_photos(self, message: types.Message):

        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–æ—Ç–æ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –ø–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö
        :param message: type.Message
        """

        self.kb.add(*self.kb_buttons)

        i = 0
        while i < len(self.photos) - 1:
            await message.answer_photo(self.photos[i])
            i += 1
        await message.answer_photo(self.photos[i], reply_markup=self.kb)
